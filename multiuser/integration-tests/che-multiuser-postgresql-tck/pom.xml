<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2017 Red Hat, Inc.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>che-multiuser-integration-tests</artifactId>
        <groupId>org.eclipse.che.multiuser</groupId>
        <version>5.19.0-SNAPSHOT</version>
    </parent>
    <artifactId>che-multiuser-postgresql-tck</artifactId>
    <packaging>jar</packaging>
    <name>Che Multiuser :: PostgreSQL Tck</name>
    <properties>
        <db.image.name>postgres:9.4</db.image.name>
        <jdbc.driver>org.postgresql.Driver</jdbc.driver>
        <jdbc.password>multiuser</jdbc.password>
        <jdbc.url>jdbc:postgresql://${docker.host.address}:${jdbc.port}/multiuser</jdbc.url>
        <jdbc.user>multiuser</jdbc.user>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-organization</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-permission</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-resource</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-permission-machine</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-permission-workspace</artifactId>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-commons-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-db</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-db-vendor-postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-sql-schema</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-organization</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-organization-shared</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-api-permission</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-permission-machine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-permission-workspace</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.multiuser</groupId>
            <artifactId>che-multiuser-sql-schema</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                                    <includeArtifactIds>che-multiuser-api-resource,
                                        che-multiuser-api-organization,
                                        che-multiuser-api-permission,
                                        che-multiuser-permission-machine,
                                        che-multiuser-permission-workspace</includeArtifactIds>
                                    <includeScope>test</includeScope>
                                </configuration>
                            </execution>
                            <execution>
                                <id>resource-dependencies</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeArtifactIds>che-core-sql-schema,
                                        che-multiuser-sql-schema</includeArtifactIds>
                                    <includes>che-schema/</includes>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <jdbc.driver>${jdbc.driver}</jdbc.driver>
                                <jdbc.url>${jdbc.url}</jdbc.url>
                                <jdbc.user>${jdbc.user}</jdbc.user>
                                <jdbc.password>${jdbc.password}</jdbc.password>
                            </systemPropertyVariables>
                            <includes>
                                <include>**/tck/**</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.15.16</version>
                        <!-- Connect start/stop to pre- and
                 post-integration-test phase, respectively if you want to start
                 your docker containers during integration tests -->
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>database</alias>
                                    <name>${db.image.name}</name>
                                    <run>
                                        <ports>
                                            <port>jdbc.port:5432</port>
                                        </ports>
                                        <wait>
                                            <log>database system is ready to accept connections</log>
                                            <time>20000</time>
                                        </wait>
                                        <restartPolicy>
                                            <name>always</name>
                                        </restartPolicy>
                                        <env>
                                            <POSTGRES_PASSWORD>${jdbc.password}</POSTGRES_PASSWORD>
                                            <POSTGRES_USER>${jdbc.user}</POSTGRES_USER>
                                        </env>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
